name: CI checks

on: [push, pull_request]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cargo-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-dependencies-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-dependencies
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.59.0
          override: true
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch
      - name: Build tests
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --verbose --exclude rage --all-features --tests
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --verbose --exclude rage --all-features
      - name: Autoclean the cache
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run:
          cargo install --no-default-features --features ci-autoclean cargo-cache
          cargo-cache

  build:
    name: Build target ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - wasm32-wasi

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cargo-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-dependencies-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-dependencies
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.59.0
          override: true
      - name: Add target
        run: rustup target add ${{ matrix.target }}
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch
      - name: Build for target
        working-directory: ./age
        run: cargo build --verbose --no-default-features --target ${{ matrix.target }}
      - name: Autoclean the cache
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run:
          cargo install --no-default-features --features ci-autoclean cargo-cache
          cargo-cache

  bitrot:
    name: Bitrot
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cargo-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-dependencies-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-dependencies
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.59.0
          override: true
      - name: Install linux build dependencies
        run: sudo apt install libfuse-dev
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --tests --examples --benches --all-features
      - name: Autoclean the cache
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run:
          cargo install --no-default-features --features ci-autoclean cargo-cache
          cargo-cache

  clippy:
    name: Clippy (1.59.0)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cargo-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-dependencies-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-dependencies
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.59.0
          components: clippy
          override: true
      - name: Install linux build dependencies
        run: sudo apt install libfuse-dev
      - name: Clippy check
        uses: actions-rs/clippy-check@v1
        with:
          name: Clippy (1.59.0)
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -D warnings
      - name: Autoclean the cache
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run:
          cargo install --no-default-features --features ci-autoclean cargo-cache
          cargo-cache

  codecov:
    name: Code coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cargo-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-dependencies-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-dependencies
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install linux build dependencies
        run: sudo apt install libfuse-dev
      - name: Generate coverage report
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.19.1'
          args: --workspace --release --all-features --timeout 180 --out Xml
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3.1.1
#        with:
#          fail_ci_if_error: true
      - name: Autoclean the cache
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run:
          cargo install --no-default-features --features ci-autoclean cargo-cache
          cargo-cache

  doc-links:
    name: Intra-doc links
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cargo-cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-dependencies-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo-dependencies
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.59.0
          override: true
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      # Ensure intra-documentation links all resolve correctly
      # Requires #![deny(intra_doc_link_resolution_failure)] in crates.
      - name: Check intra-doc links
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all --exclude rage --all-features --document-private-items
      - name: Autoclean the cache
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run:
          cargo install --no-default-features --features ci-autoclean cargo-cache
          cargo-cache


  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.59.0
          components: rustfmt
          override: true
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
